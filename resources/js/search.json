[[{"i":"sncfjs---introduction","l":"SNCF.JS - Introduction"},{"l":"Introduction","p":["SNCF.JS is a JavaScript library that allows you to easily use the SNCF api."]},{"l":"Requirements","p":["Only an api key is required to use the library. You can get one here"]},{"l":"Installation","p":["You can install SNCF.js using npm or yarn.","NPM","Yarn","All operating systems are supported, including Mac, Windows, and Linux."]},{"l":"Quick start"},{"l":"Get your SNCF Token","p":["Copy .env.backup to .env and fill the token in the file."]},{"i":"import-the-library-have-fun","l":"Import the library have fun!"},{"l":"Documentation"},{"l":"The documentation is available here"},{"l":"You can find some examples here"},{"l":"Features"},{"l":"Easy to use","p":["SNCF.JS is object-oriented which makes its use simple, fast and efficient"]},{"l":"Lightning fast","p":["SNCF.js is optimized to the maximum, and will soon have a caching system limiting the requests"]},{"l":"Easy install","p":["Installation takes only a few seconds because the package is very light."]},{"i":"responsive-and-friendly-support","l":"✋ Responsive and friendly support","p":["A bug, a request, need help? Do not hesitate to ask, we will be happy to answer you in the smallest details"]},{"l":"Support","p":["A technical support that listens, efficient and fast, join the Discussions.","If you find a defect or would like to submit a feature request, please create an Issue and we will investigate right away.","Do you have a general inquiry? Please feel free to contact me on instagram.","We ❤️ feedback."]}],[{"l":"Examples","p":["You can find examples of how to use the library here.","How to get a station","How to get the next departures of a station"]}],[{"l":"How to get a station"},{"l":"2 ways to get a station are available"},{"l":"1. Search for a station"},{"l":"2. Get a station by its id"}],[{"l":"How to get the next departures of a station"},{"l":"2 ways to get the next departures of a station are available"},{"l":"1. Search for a station and get the next departures of the first station of the array"},{"l":"2. Get a station by its id and get the next departures"}],[{"l":"Disruption","p":["search","get"]},{"l":"Methods"},{"i":"search","l":".search","p":["Search the disruptions","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","since_date","date","defines the start date of the disruptions to search for","until_date","defines the end date of the disruptions to search for","Type: promise <disruption[]>"]},{"i":"get","l":".get","p":["Get a disruption by id","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","disruptionID","string","The id of the disruption to get","Type: promise <disruption>"]}],[{"l":"Journey","p":["get"]},{"l":"Methods"},{"i":"get","l":".get","p":["Get a journey details with departure and arrival stop areas ids","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","from","string","The departure stop area id or name","to","The arrival stop area id or name","date=now","date","The date of the journey to get","Type: promise <journey[]>"]}],[{"l":"Line","p":["search","get"]},{"l":"Methods"},{"i":"search","l":".search","p":["Search a line by name (departure - arrival)","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","line","string","The name of the line","Type: promise <line[]>"]},{"i":"get","l":".get","p":["Get a line by id","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","lineID","string","The id of the line","Type: promise <line>"]}],[{"l":"Place","p":["search","get"]},{"l":"Methods"},{"i":"search","l":".search","p":["Search for a place by name","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","station","string","The name of the station to search for","The filters to apply to the search","Type: promise <placemanagerresult>"]},{"i":"get","l":".get","p":["Get a place by id","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","stationID","string","The id of the station to get","Type: promise <stoparea>"]}],[{"l":"ActivePeriods","p":["start_date","end_date"]},{"l":"Properties"},{"i":"start_date","l":".start_date","p":["Type: date"]},{"i":"end_date","l":".end_date","p":["Type: date"]}],[{"l":"AdministrativeRegion","p":["id","name","coord","insee","timezone"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the stop area id","Type: string"]},{"i":"name","l":".name","p":["Return the stop area name","Type: string"]},{"i":"coord","l":".coord","p":["Return the coordinate of the stop area","Type: coord"]},{"i":"insee","l":".insee","p":["Return the stop area zip code","Type: string"]},{"i":"timezone","l":".timezone","p":["Return the stop area level","Type: number"]}],[{"l":"Arrival","p":["train","arrival_date_time","base_arrival_date_time","departure_date_time","base_departure_date_time","route","stop_area","isLate"]},{"l":"Properties"},{"i":"train","l":".train","p":["Return the train data","Type: train_info"]},{"i":"arrival_date_time","l":".arrival_date_time","p":["Returns the arrival time","Type: date"]},{"i":"base_arrival_date_time","l":".base_arrival_date_time","p":["Returns the default arrival time","Type: date"]},{"i":"departure_date_time","l":".departure_date_time","p":["Returns the departure time","Type: date"]},{"i":"base_departure_date_time","l":".base_departure_date_time","p":["Returns the default departure time","Type: date"]},{"i":"route","l":".route","p":["Return route data","Type: route"]},{"i":"stop_area","l":".stop_area","p":["Return stop point data","Type: stoparea"]},{"i":"islate","l":".isLate","p":["Return boolean if the train is in late","Type: boolean"]}],[{"l":"Calendar","p":["active_periods","week_pattern"]},{"l":"Properties"},{"i":"active_periods","l":".active_periods","p":["Return the active_periods of the calendar","Type: array <activeperiods>"]},{"i":"week_pattern","l":".week_pattern","p":["Return the week pattern of the calendar","Type: weekpattern"]}],[{"l":"Co2Emission","p":["value","unit"]},{"l":"Properties"},{"i":"value","l":".value","p":["Type: number"]},{"i":"unit","l":".unit","p":["Type: string"]}],[{"l":"Coord","p":["lat","lon"]},{"l":"Properties"},{"i":"lat","l":".lat","p":["Type: number"]},{"i":"lon","l":".lon","p":["Type: number"]}],[{"l":"Departure","p":["train","arrival_date_time","base_arrival_date_time","departure_date_time","base_departure_date_time","route","stop_area","isLate"]},{"l":"Properties"},{"i":"train","l":".train","p":["Return the train data","Type: train_info"]},{"i":"arrival_date_time","l":".arrival_date_time","p":["Returns the arrival time","Type: string"]},{"i":"base_arrival_date_time","l":".base_arrival_date_time","p":["Returns the default arrival time","Type: string"]},{"i":"departure_date_time","l":".departure_date_time","p":["Returns the departure time","Type: string"]},{"i":"base_departure_date_time","l":".base_departure_date_time","p":["Returns the default departure time","Type: string"]},{"i":"route","l":".route","p":["Return route data","Type: route"]},{"i":"stop_area","l":".stop_area","p":["Return stop point data","Type: stoparea"]},{"i":"islate","l":".isLate","p":["Return boolean if the train is in late","Type: boolean"]}],[{"l":"Disruption","p":["id","status","cause","messages","start","end","updated_at","canceled","delayed","severity","impacted_stops"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the id of the disruption","Type: string"]},{"i":"status","l":".status","p":["Return the status of the disruption","Type: string"]},{"i":"cause","l":".cause","p":["Return the cause of the disruption","Type: string"]},{"i":"messages","l":".messages","p":["Return the messages of the disruption","Type: array"]},{"i":"start","l":".start","p":["Return the start date of the disruption","Type: date"]},{"i":"end","l":".end","p":["Return the end date of the disruption","Type: date"]},{"i":"updated_at","l":".updated_at","p":["Return the date on which the disruption was updated","Type: date"]},{"i":"canceled","l":".canceled","p":["Return if the journey is canceled or not","Type: boolean"]},{"i":"delayed","l":".delayed","p":["Return if the journey is delayed or not","Type: boolean"]},{"i":"severity","l":".severity","p":["Return the severity of the disruption","Type: severity"]},{"i":"impacted_stops","l":".impacted_stops","p":["Return the impacted stops of the disruption","Type: array <impactedstop>"]}],[{"l":"ImpactedStop","p":["cause","is_detour","arrival","departure","stop_area"]},{"l":"Properties"},{"i":"cause","l":".cause","p":["Return the cause of the impact","Type: string"]},{"i":"is_detour","l":".is_detour","p":["Return boolean if the stop is impacted by a detour","Type: boolean"]},{"i":"arrival","l":".arrival","p":["Return the Arrival data of the stop","Type: timeimpact"]},{"i":"departure","l":".departure","p":["Return the Departure data of the stop","Type: timeimpact"]},{"i":"stop_area","l":".stop_area","p":["Return the stop area","Type: stoparea"]}],[{"l":"Journey","p":["status","disruptions","type","departure_date_time","arrival_date_time","duration","price","transfers","steps"]},{"l":"Properties"},{"i":"status","l":".status","p":["Return value if status is define","Type: string"]},{"i":"disruptions","l":".disruptions","p":["If the journey has disruptions return the disruptions","Type: array <disruption>"]},{"i":"type","l":".type","p":["Define the journey average","Type: string"]},{"i":"departure_date_time","l":".departure_date_time","p":["Departure time","Type: date"]},{"i":"arrival_date_time","l":".arrival_date_time","p":["Arrival time","Type: date"]},{"i":"duration","l":".duration","p":["Duration of the journey","Type: number"]},{"i":"price","l":".price","p":["Price of the journey","Type: price"]},{"i":"transfers","l":".transfers","p":["Transfers of the journey","Type: number"]},{"i":"steps","l":".steps","p":["Get the steps of the journey","Type: promise <step[]>"]}],[{"l":"Line","p":["id","name","opening_time","closing_time","routes","network","physical_modes","commercial_mode"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the line id","Type: string"]},{"i":"name","l":".name","p":["Return the line name","Type: string"]},{"i":"opening_time","l":".opening_time","p":["Return the opening time","Type: string"]},{"i":"closing_time","l":".closing_time","p":["Return the closing time","Type: string"]},{"i":"routes","l":".routes","p":["Return the line routes if exist","Type: array <route>"]},{"i":"network","l":".network","p":["Return the line network","Type: network"]},{"i":"physical_modes","l":".physical_modes","p":["Return the physical mode","Type: array <network>"]},{"i":"commercial_mode","l":".commercial_mode","p":["Return the commercial mode","Type: string"]}],[{"l":"Network","p":["id","name"]},{"l":"Properties"},{"i":"id","l":".id","p":["Type: string"]},{"i":"name","l":".name","p":["Type: string"]}],[{"l":"Price","p":["value","found"]},{"l":"Properties"},{"i":"value","l":".value","p":["The price value","Type: string"]},{"i":"found","l":".found","p":["The price found","Type: boolean"]}],[{"l":"Route","p":["id","name","direction","direction_type","physical_modes","line"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the route id","Type: string"]},{"i":"name","l":".name","p":["Return the route name","Type: string"]},{"i":"direction","l":".direction","p":["Return the route direction","Type: stoparea"]},{"i":"direction_type","l":".direction_type","p":["Return the route direction type","Type: string"]},{"i":"physical_modes","l":".physical_modes","p":["Physical mode of the route","Type: array"]},{"i":"line","l":".line","p":["Return the route line","Type: line"]}],[{"l":"Severity","p":["code","name","priority"]},{"l":"Properties"},{"i":"code","l":".code","p":["The code of the severity","Type: string"]},{"i":"name","l":".name","p":["The name of the severity","Type: string"]},{"i":"priority","l":".priority","p":["The priority of the severity","Type: string"]}],[{"l":"Step","p":["id","type","is_transfer","duration","arrival_date_time","departure_date_time","from","stops","to","co2_emission"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the step id","Type: string"]},{"i":"type","l":".type","p":["Return the step type","Type: string"]},{"i":"is_transfer","l":".is_transfer","p":["Return boolean if the step is a transfer","Type: boolean"]},{"i":"duration","l":".duration","p":["Return the step duration","Type: number"]},{"i":"arrival_date_time","l":".arrival_date_time","p":["Return the step arrival date time","Type: date"]},{"i":"departure_date_time","l":".departure_date_time","p":["Return the step departure date time","Type: date"]},{"i":"from","l":".from","p":["From if exist","Type: stoparea"]},{"i":"stops","l":".stops","p":["Return the stops of the step if exist","Type: array <stopstep>"]},{"i":"to","l":".to","p":["To","Type: stoparea"]},{"i":"co2_emission","l":".co2_emission","p":["Return the Co2 emission of the step","Type: co2emission"]}],[{"l":"StopArea","p":["id","name","coord","administrative_region","timezone","departures","arrivals","journeys","lines","routes","vehicle_journeys"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the stop area id","Type: string"]},{"i":"name","l":".name","p":["Return the stop area name","Type: string"]},{"i":"coord","l":".coord","p":["Return the stop area zip code","Type: object"]},{"i":"administrative_region","l":".administrative_region","p":["Return the Administative Region of the stop area (if exist)","Type: administrativeregion"]},{"i":"timezone","l":".timezone","p":["Return the stop area timezone","Type: string"]},{"l":"Methods"},{"i":"departures","l":".departures","p":["Get the departures of the stop area","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","date","- The date of the departures","Type: array <departure>"]},{"i":"arrivals","l":".arrivals","p":["Get the arrivals of the stop area","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","date","- The date of the arrivals","Type: promise <arrival[]>"]},{"i":"journeys","l":".journeys","p":["Get Journeys from the stop area","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","to","string","- The id or name of the destination","date","- The date of the journey","Type: promise <journey[]>"]},{"i":"lines","l":".lines","p":["Get the lines of the stop area","Type: promise <line[]>"]},{"i":"routes","l":".routes","p":["Get the routes of the stop area","Type: promise <route[]>"]},{"i":"vehicle_journeys","l":".vehicle_journeys","p":["Get vehicle journeys of the stop area","PARAMETER","TYPE","OPTIONAL","DESCRIPTION","date","- The date of the vehicle journeys","Type: promise <vehicle[]>"]}],[{"l":"StopStep","p":["arrival","departure","stop_area"]},{"l":"Properties"},{"i":"arrival","l":".arrival","p":["Return the Arrival data of the stop","Type: time"]},{"i":"departure","l":".departure","p":["Return the Departure data of the stop","Type: time"]},{"i":"stop_area","l":".stop_area","p":["Return the stop area","Type: stoparea"]}],[{"l":"StopTime","p":["headsign","arrival_time","departure_time","skipped","drop_off","pick_up","stop_area"]},{"l":"Properties"},{"i":"headsign","l":".headsign","p":["Return the headsign of the train","Type: string"]},{"i":"arrival_time","l":".arrival_time","p":["Arrival time","Type: string"]},{"i":"departure_time","l":".departure_time","p":["Departure time","Type: string"]},{"i":"skipped","l":".skipped","p":["Return boolean if the stop is skipped","Type: boolean"]},{"i":"drop_off","l":".drop_off","p":["Return boolean if drop off is available","Type: boolean"]},{"i":"pick_up","l":".pick_up","p":["Return boolean if pick up is available","Type: boolean"]},{"i":"stop_area","l":".stop_area","p":["Return the stop point","Type: stoparea"]}],[{"l":"Time","p":["base_date","real_date"]},{"l":"Properties"},{"i":"base_date","l":".base_date","p":["Type: date"]},{"i":"real_date","l":".real_date","p":["Type: date"]}],[{"l":"TimeImpact","p":["base_time","real_time","status"]},{"l":"Properties"},{"i":"base_time","l":".base_time","p":["Type: date"]},{"i":"real_time","l":".real_time","p":["Type: date"]},{"i":"status","l":".status","p":["Type: string"]}],[{"l":"Train_info","p":["headsign","name","direction","commercial_mode","physical_mode"]},{"l":"Properties"},{"i":"headsign","l":".headsign","p":["The train identifier","Type: string"]},{"i":"name","l":".name","p":["The train name","Type: string"]},{"i":"direction","l":".direction","p":["The train direction","Type: string"]},{"i":"commercial_mode","l":".commercial_mode","p":["The train commercial mode","Type: string"]},{"i":"physical_mode","l":".physical_mode","p":["The train physical mode","Type: string"]}],[{"l":"Vehicle","p":["id","headsign","trip_id","has_disruptions","calendar","departure_time","arrival_time","stop_times","disruptions"]},{"l":"Properties"},{"i":"id","l":".id","p":["Return the vehicle id","Type: string"]},{"i":"headsign","l":".headsign","p":["Return the vehicle headsign","Type: string"]},{"i":"trip_id","l":".trip_id","p":["Return trip ID","Type: string"]},{"i":"has_disruptions","l":".has_disruptions","p":["Return boolean if the vehicle has disruptions","Type: boolean"]},{"i":"calendar","l":".calendar","p":["Return the calendar of the vehicle","Type: array <calendar>"]},{"i":"departure_time","l":".departure_time","p":["Return the departure time of the vehicle","Type: string"]},{"i":"arrival_time","l":".arrival_time","p":["Return the arrival time of the vehicle","Type: string"]},{"i":"stop_times","l":".stop_times","p":["Return the steps of the vehicle","Type: array <stoptime>"]},{"i":"disruptions","l":".disruptions","p":["Return the vehicle disruptions","Type: array <disruption>"]}],[{"l":"WeekPattern","p":["monday","tuesday","wednesday","thursday","friday","saturday","sunday"]},{"l":"Properties"},{"i":"monday","l":".monday","p":["Type: boolean"]},{"i":"tuesday","l":".tuesday","p":["Type: boolean"]},{"i":"wednesday","l":".wednesday","p":["Type: boolean"]},{"i":"thursday","l":".thursday","p":["Type: boolean"]},{"i":"friday","l":".friday","p":["Type: boolean"]},{"i":"saturday","l":".saturday","p":["Type: boolean"]},{"i":"sunday","l":".sunday","p":["Type: boolean"]}],[{"l":"LICENSE","p":["BSD 3-Clause License","Copyright (c) 2022, Alexis06030631 All rights reserved.","Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:","Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.","Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.","Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.","THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."]}]]