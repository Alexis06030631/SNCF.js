import{_ as t,o as e,c as s,V as a}from"./chunks/framework.163d85da.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/sncf.js.step.md","filePath":"api/sncf.js.step.md","lastUpdated":null}'),r={name:"api/sncf.js.step.md"},d=a('<p><a href="./">Home</a> &gt; <a href="./sncf.js.html">sncf.js</a> &gt; <a href="./sncf.js.step.html">Step</a></p><h2 id="step-class" tabindex="-1">Step class <a class="header-anchor" href="#step-class" aria-label="Permalink to &quot;Step class&quot;">​</a></h2><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Step</span></span></code></pre></div><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><table><thead><tr><th>Constructor</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./sncf.js.step._constructor_.html">(constructor)(Client, data)</a></td><td></td><td>Constructs a new instance of the <code>Step</code> class</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./sncf.js.step.arrival_date_time.html">arrival_date_time</a></td><td></td><td>Date</td><td>Return the step arrival date time</td></tr><tr><td><a href="./sncf.js.step.co2_emission.html">co2_emission</a></td><td></td><td><a href="./sncf.js.co2emission.html">Co2Emission</a></td><td></td></tr><tr><td><a href="./sncf.js.step.departure_date_time.html">departure_date_time</a></td><td></td><td>Date</td><td>Return the step departure date time</td></tr><tr><td><a href="./sncf.js.step.duration.html">duration</a></td><td></td><td>number</td><td>Return the step duration</td></tr><tr><td><a href="./sncf.js.step.from.html">from</a></td><td></td><td><a href="./sncf.js.stoparea.html">StopArea</a></td><td>Return the step from if exist</td></tr><tr><td><a href="./sncf.js.step.id.html">id</a></td><td></td><td>string</td><td>Return the step id</td></tr><tr><td><a href="./sncf.js.step.is_transfer.html">is_transfer</a></td><td></td><td>boolean</td><td>Return boolean if the step is a transfer</td></tr><tr><td><a href="./sncf.js.step.stops.html">stops</a></td><td></td><td><a href="./sncf.js.stopstep.html">StopStep</a>[]</td><td>Return the step stops if exist</td></tr><tr><td><a href="./sncf.js.step.to.html">to</a></td><td></td><td><a href="./sncf.js.stoparea.html">StopArea</a></td><td>Return the step to if exist</td></tr><tr><td><a href="./sncf.js.step.type.html">type</a></td><td></td><td>string</td><td>Return the step type</td></tr></tbody></table>',8),o=[d];function n(p,c,i,h,l,f){return e(),s("div",null,o)}const u=t(r,[["render",n]]);export{_ as __pageData,u as default};
