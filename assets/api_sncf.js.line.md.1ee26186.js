import{_ as t,o as e,c as s,V as a}from"./chunks/framework.cb204819.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/sncf.js.line.md","filePath":"api/sncf.js.line.md","lastUpdated":1714753790000}'),r={name:"api/sncf.js.line.md"},n=a('<p><a href="./">Home</a> &gt; <a href="./sncf.js.html">sncf.js</a> &gt; <a href="./sncf.js.line.html">Line</a></p><h2 id="line-class" tabindex="-1">Line class <a class="header-anchor" href="#line-class" aria-label="Permalink to &quot;Line class&quot;">​</a></h2><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Line</span></span></code></pre></div><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><table><thead><tr><th><p>Constructor</p></th><th><p>Modifiers</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./sncf.js.line._constructor_.html">(constructor)(Client, data)</a></p></td><td></td><td><p>Constructs a new instance of the <code>Line</code> class</p></td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th><p>Property</p></th><th><p>Modifiers</p></th><th><p>Type</p></th><th><p>Description</p></th></tr></thead><tbody><tr><td><p><a href="./sncf.js.line.closing_time.html">closing_time</a></p></td><td></td><td><p>string</p></td><td><p>Return the closing time (HH:MM:SS)</p></td></tr><tr><td><p><a href="./sncf.js.line.commercial_mode.html">commercial_mode</a></p></td><td></td><td><p>string</p></td><td><p>Return the commercial mode</p></td></tr><tr><td><p><a href="./sncf.js.line.id.html">id</a></p></td><td></td><td><p>string</p></td><td><p>Return the line id</p></td></tr><tr><td><p><a href="./sncf.js.line.name.html">name</a></p></td><td></td><td><p>string</p></td><td><p>Return the line name</p></td></tr><tr><td><p><a href="./sncf.js.line.network.html">network</a></p></td><td></td><td><p><a href="./sncf.js.network.html">Network</a></p></td><td><p>Return the line network</p></td></tr><tr><td><p><a href="./sncf.js.line.opening_time.html">opening_time</a></p></td><td></td><td><p>string</p></td><td><p>Return the opening time (HH:MM:SS)</p></td></tr><tr><td><p><a href="./sncf.js.line.physical_modes.html">physical_modes</a></p></td><td></td><td><p><a href="./sncf.js.network.html">Network</a>[]</p></td><td><p>Return the physical modes</p></td></tr><tr><td><p><a href="./sncf.js.line.routes.html">routes</a></p></td><td></td><td><p><a href="./sncf.js.route.html">Route</a>[]</p></td><td><p>Return the line routes if exist</p></td></tr></tbody></table>',8),p=[n];function d(o,i,l,c,h,f){return e(),s("div",null,p)}const u=t(r,[["render",d]]);export{_ as __pageData,u as default};
