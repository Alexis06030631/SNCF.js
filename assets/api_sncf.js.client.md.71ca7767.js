import{_ as t,o as e,c as a,V as s}from"./chunks/framework.51fee0ea.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"api/sncf.js.client.md","filePath":"api/sncf.js.client.md","lastUpdated":null}'),n={name:"api/sncf.js.client.md"},r=s('<p><a href="./">Home</a> &gt; <a href="./sncf.js.html">sncf.js</a> &gt; <a href="./sncf.js.client.html">Client</a></p><h2 id="client-class" tabindex="-1">Client class <a class="header-anchor" href="#client-class" aria-label="Permalink to &quot;Client class&quot;">​</a></h2><p>The main hub for interacting with the Navitia API.</p><p><strong>Signature:</strong></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Client</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">extends</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">BaseClient</span></span></code></pre></div><p><strong>Extends:</strong> <a href="./sncf.js.baseclient.html">BaseClient</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><table><thead><tr><th>Constructor</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./sncf.js.client._constructor_.html">(constructor)(options)</a></td><td></td><td>Constructs a new instance of the <code>Client</code> class</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><table><thead><tr><th>Property</th><th>Modifiers</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="./sncf.js.client.debug.html">debug</a></td><td></td><td>boolean</td><td>If app run as debug mode</td></tr><tr><td><a href="./sncf.js.client.disruption.html">disruption</a></td><td></td><td><a href="./sncf.js.disruptionmanager.html">DisruptionManager</a></td><td>DisruptionManager class</td></tr><tr><td><a href="./sncf.js.client.isready.html">isReady</a></td><td><code>readonly</code></td><td>boolean</td><td>Indicates whether the client is ready to start working.</td></tr><tr><td><a href="./sncf.js.client.journey.html">journey</a></td><td></td><td><a href="./sncf.js.journeymanager.html">JourneyManager</a></td><td>JourneysManager class</td></tr><tr><td><a href="./sncf.js.client.line.html">line</a></td><td></td><td><a href="./sncf.js.linemanager.html">LineManager</a></td><td>LineManager class</td></tr><tr><td><a href="./sncf.js.client.place.html">place</a></td><td></td><td><a href="./sncf.js.placesmanager.html">PlacesManager</a></td><td>PlacesManager class</td></tr><tr><td><a href="./sncf.js.client.requestmanager.html">requestManager</a></td><td></td><td><a href="./sncf.js.requestmanager.html">RequestManager</a></td><td>The request manager of the client</td></tr><tr><td><a href="./sncf.js.client.status.html">status</a></td><td></td><td>string</td><td>The status of the client</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><table><thead><tr><th>Method</th><th>Modifiers</th><th>Description</th></tr></thead><tbody><tr><td><a href="./sncf.js.client.login.html">login(token)</a></td><td></td><td>Logs the client in, establishing a connection to navitia.</td></tr></tbody></table>',12),d=[r];function o(l,c,i,h,p,f){return e(),a("div",null,d)}const g=t(n,[["render",o]]);export{m as __pageData,g as default};
